version: "3.7"

services:
  api:
    build: .
    platform: linux/amd64
    depends_on:
      - mongo
    environment:
      ENV: run
      MONGO_URI: "mongodb://admin:admin@mongo:27017"
      FLASK_DEBUG: 1
    ports:
      - "3000:3000"
    volumes:
      - .:/usr/src/app
    networks:
      - python_ddd
  mongo:
    image: mongo:5
    volumes:
      - ./data:/data/db
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin
    networks:
      - python_ddd
  zookeeper:
      image: confluentinc/cp-zookeeper:7.4.4
      environment:
        ZOOKEEPER_CLIENT_PORT: 2181
        ZOOKEEPER_TICK_TIME: 2000
      ports:
        - 22181:2181
  kafka:
      image: confluentinc/cp-kafka:7.4.4
      container_name: kafka
      hostname: kafka
      depends_on:
        - zookeeper
      ports:
        - 29092:29092
      environment:
        KAFKA_BROKER_ID: 1
        KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
        KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
        KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
        KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  kafka-ui:
      container_name: kafka-ui
      image: provectuslabs/kafka-ui:latest
      ports:
        - 8080:8080
      environment:
        DYNAMIC_CONFIG_ENABLED: 'true'
        KAFKA_CLUSTERS_0_NAME: local
        KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092, localhost:29092, localhost:9092, kafka:9092
      depends_on:
        - kafka
volumes:
  api_modules:
    driver: local
networks:
  python_ddd:
